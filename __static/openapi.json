{
  "openapi": "3.1.0",
  "info": {
    "title": "kaffe.chat",
    "description": "This HTTP API has RPC rather than REST semantics: **all** operations are `POST`, regardless of what CRUD writes or reads they might or might not effect.\n\n**tl;dr:** **usually, API requests will just-work as expected _without_ knowing all those intro notes right below** (which elaborate mostly to-be-expected software-dev-commonplaces) — but in any cases of unexpected results or errors, they'll likely help complete the mental picture.\n___\nOur backend stack's \"opinionated convention-over-configuration\" designs yield a few request/response rules that predictably remain **always in effect across all listed operations**:\n- Whereas request and response bodies are operation-specific, all operations share the exact-same set of request headers, URL query-string parameters and response headers (albeit being elaborated here identically and redundantly for each individual operation).\n- The empty request body is principally the JSON `{}`, but fully-empty or JSON `null` request bodies are permissible and interpreted as `{}`.\n  - Response bodies are never empty and are never the JSON `null`.\n- Request and response bodies are always valid JSON values for _JSON objects_, ie. they're never immediately JSON arrays, `string`s, `number`s, or `boolean`s.\n  - They're also never immediately \"domain objects\" (ie. a `GetFoo` op would yield not a `Foo` but a `Result` (or similar) field with the found `Foo`; or a `CreateFoo` would expect not a `Foo` payload but a `NewFoo` (or similar) field with the new `Foo`).\n- All mentioned request-object (and sub-object) fields are **by default optional** and omittable or `null`able (implying for atomic types semantic equivalence to `\"\"` or `0` or `false` as per _Golang_ type-system semantics),\n  - **any exceptions** to this optionality-by-default are indicated by the operation's listed known-error responses.\n- All mentioned response-object (and sub-object) fields will always be present in the response-body, indicating their default-ness / missing-ness / empty-ness via `null` or `\"\"` or `0` or `false` as per _Golang_ type-system semantics;\n  - empty/unset JSON arrays are never `null` but `[]`; empty JSON dictionary/hash-map objects are `null` always.\n- All (non-dictionary/non-hash-map) JSON object field names known to the backend begin with an upper-case character,\n  - any operation-specific examples of JSON objects with lower-case-beginning keys/fields indicate a JSON dictionary/hash-map object.\n- The `Content-Length` request header is **required for all** operations (with a correct value).\n- The `Content-Type` request header is optional, but if present, must be correct with regards to both the operation's specification and the request body.\n- Any `multipart/form-data` operations:\n  - **always require** the following two form-fields, ignoring all others: `files` for any binary file uploads, and `_` for the actual JSON request payload;\n  - only the `_` field value is further elaborated for any such operation in this doc, and always in the exact same way as also done in this doc for all the `application/json` operations' request bodies (**without** specifically mentioning the `_` form-field containing the `text/plain` of the full `application/json` request payload actually being elaborated there).\n\nHow to read request/response **example JSON values** rendered in this doc:\n  - `true` indicates _any_ `boolean` value, regardless of the actual real value in a call;\n  - `\"someStr\"` indicates _any_ `string` value;\n  - signed-integer `number`s are indicated by a negative-number example indicating the minimum (type-wise, not operation-specific) permissible value, with the maximum being the corresponding positive-number counterpart;\n  - unsigned-integer `number`s are indicated by a positive-number example indicating the maximum (type-wise, not not operation-specific) permissible value, with the minimum being `0`;\n  - floating-point `number`s are indicated by a positive-number example indicating the maximum (type-wise, not not operation-specific) permissible value, with the minimum being the corresponding negative-number counterpart.\n  - date-time values are indicated by RFC3339/ISO8601-formatted `string` examples:\n    - in responses, they're always UTC, whereas in requests, any timezone may be indicated;\n\t- in requests, they may always be `null` (excepting any operation-specific known-errors indicating otherwise) but must never be `\"\"` or otherwise non-RFC3339/ISO8601-parseable.\n\nAbout **error responses**:\n- All are `text/plain`.\n- In addition to those listed in this doc (thrown by the service under the indicated conditions), other error responses are at all times entirely technically-possible and not exhaustively documentable (feasibly), such as eg. DB / file-system / network disruptions. Those caught by the service will be `500`s, others (ie. from load-balancers / gateways / reverse-proxies etc. _in front of_ the service) might use _any_ HTTP status code whatsoever.\n- All the well-known (thrown rather than caught) errors listed here:\n  - have their code-identifier-compatible (spaceless ASCII) enumerant-name as their entire text response, making all error responses inherently `switch/case`able;\n  - have been recursively determined by code-path walking. Among them are some that logically could not possibly ever occur for that operation, yet identifying those (to filter them out of the listing) is (so far) out of scope for our current `openapi.json` spec generator. (In case of serious need, do let us know!)\n- Any non-known (caught rather than thrown) errors (not listed here) contain their original (usually human-language) error message fully, corresponding to the `default` in an error-handling `switch/case`.\n- **\"Not Found\" rules:**\n  - `404` **only** for HTTP requests with definitely-unroutable URL paths (ie. \"no such API operation or static-file asset or sub-site or etc.\"),\n  - `406` with approx. `FooDoesNotExist` (see per-operation known-error-responses listings for exact monikers) — for operations where existence was definitely critically expected (such as modifying some object identified by its `Id`),\n  - `200` with some operation-specific response-body field (like `Result` or similar) being `null` — for operations where the definite-existence expectation does not hold as crucially (for example those of the \"fetch single/first object found for some specified criteria\" kind).",
    "version": "23.319",
    "contact": {
      "name": "Permalink of openapi.json",
      "url": "https://kaffe.chat/__static/openapi.json"
    }
  },
  "paths": {
    "/_/postDelete": {
      "post": {
        "operationId": "__postDelete",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `__postDelete_In`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/struct___Id_yodb_I64__",
                "type": "object"
              },
              "example": {
                "Id": -9007199254740991
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `yo/util.None`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util_None",
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Possible `text/plain` responses:\n- `__postDelete_InvalidPostId`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "__postDelete_InvalidPostId": {
                    "value": "__postDelete_InvalidPostId"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/postEmojiFullList": {
      "post": {
        "operationId": "__postEmojiFullList",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `yo/util.None`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/util_None",
                "type": "object"
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `yo/util.Return[map[string]string]`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util_Return_map_string_string_",
                  "type": "object"
                },
                "example": {
                  "Result": {
                    "someMapKey1": "someStr",
                    "some_map_key_2": "someStr"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/postMonthsUtc": {
      "post": {
        "operationId": "__postMonthsUtc",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `__postMonthsUtc_In`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/struct___WithUserIds___yodb_I64__",
                "type": "object"
              },
              "example": {
                "WithUserIds": [
                  -9007199254740991
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `__postMonthsUtc_Out`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/struct___Periods___kaffe_YearAndMonth__",
                  "type": "object"
                },
                "example": {
                  "Periods": [
                    {
                      "Year": 65535,
                      "Month": 255
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/postNew": {
      "post": {
        "operationId": "__postNew",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "`multipart/form-data` form-fields:\n1. binary file uploads in form field `files`, and\n2. `application/json` request payload as `text/plain` in form field `_`, as elaborated in this example (backend type ref: `kaffe/app.Post`)",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/kaffe_Post",
                "type": "object"
              },
              "example": {
                "Id": -9007199254740991,
                "DtMade": "2023-11-15T19:27:11.350451121Z",
                "DtMod": "2023-11-15T19:27:11.35045471Z",
                "By": {},
                "To": [
                  -9007199254740991
                ],
                "Htm": "someStr",
                "Files": [
                  "someStr"
                ],
                "FileContentTypes": [
                  "someStr"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `yo/util.Return[yo/db.I64]`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util_Return_yo_db_I64_",
                  "type": "object"
                },
                "example": {
                  "Result": -9007199254740991
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Possible `text/plain` responses:\n- `__postNew_ExpectedNonEmptyPost`\n- `__postNew_ExpectedOnlyBuddyRecipients`\n- `__postNew_ExpectedEmptyFilesFieldWithUploadedFilesInMultipartForm`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "__postNew_ExpectedEmptyFilesFieldWithUploadedFilesInMultipartForm": {
                    "value": "__postNew_ExpectedEmptyFilesFieldWithUploadedFilesInMultipartForm"
                  },
                  "__postNew_ExpectedNonEmptyPost": {
                    "value": "__postNew_ExpectedNonEmptyPost"
                  },
                  "__postNew_ExpectedOnlyBuddyRecipients": {
                    "value": "__postNew_ExpectedOnlyBuddyRecipients"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/postsDeleted": {
      "post": {
        "operationId": "__postsDeleted",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `__postsDeleted_In`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/struct___OutOfPostIds___yodb_I64__",
                "type": "object"
              },
              "example": {
                "OutOfPostIds": [
                  -9007199254740991
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `__postsDeleted_Out`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/struct___DeletedPostIds___yodb_I64__",
                  "type": "object"
                },
                "example": {
                  "DeletedPostIds": [
                    -9007199254740991
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/postsForMonthUtc": {
      "post": {
        "operationId": "__postsForMonthUtc",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `kaffe/app.ApiArgPeriod`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kaffe_ApiArgPeriod",
                "type": "object"
              },
              "example": {
                "Period": {
                  "Year": 65535,
                  "Month": 255
                },
                "OnlyBy": [
                  -9007199254740991
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `kaffe/app.PostsListResult`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kaffe_PostsListResult",
                  "type": "object"
                },
                "example": {
                  "Posts": [
                    {
                      "Id": -9007199254740991,
                      "DtMade": "2023-11-15T19:27:11.350570546Z",
                      "DtMod": "2023-11-15T19:27:11.350573099Z",
                      "By": 0,
                      "To": [
                        -9007199254740991
                      ],
                      "Htm": "someStr",
                      "Files": [
                        "someStr"
                      ],
                      "FileContentTypes": [
                        "someStr"
                      ]
                    }
                  ],
                  "NextSince": "2023-11-15T19:27:11.350582734Z",
                  "UnreadCounts": {
                    "someMapKey1": -9007199254740991,
                    "some_map_key_2": -9007199254740991
                  }
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/postsRecent": {
      "post": {
        "operationId": "__postsRecent",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `__postsRecent_In`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/struct___Since__yodb_DateTime__OnlyBy___yodb_I64__",
                "type": "object"
              },
              "example": {
                "Since": "2023-11-15T19:27:11.350626362Z",
                "OnlyBy": [
                  -9007199254740991
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `kaffe/app.PostsListResult`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kaffe_PostsListResult",
                  "type": "object"
                },
                "example": {
                  "Posts": [
                    {
                      "Id": -9007199254740991,
                      "DtMade": "2023-11-15T19:27:11.350570546Z",
                      "DtMod": "2023-11-15T19:27:11.350573099Z",
                      "By": 0,
                      "To": [
                        -9007199254740991
                      ],
                      "Htm": "someStr",
                      "Files": [
                        "someStr"
                      ],
                      "FileContentTypes": [
                        "someStr"
                      ]
                    }
                  ],
                  "NextSince": "2023-11-15T19:27:11.350582734Z",
                  "UnreadCounts": {
                    "someMapKey1": -9007199254740991,
                    "some_map_key_2": -9007199254740991
                  }
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/userBuddies": {
      "post": {
        "operationId": "__userBuddies",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `yo/util.None`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/util_None",
                "type": "object"
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `__userBuddies_Out`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/struct___Buddies____kaffe_User__BuddyRequestsBy____kaffe_User__",
                  "type": "object"
                },
                "example": {
                  "Buddies": [
                    {
                      "Id": -9007199254740991,
                      "DtMade": "2023-11-15T19:27:11.350667006Z",
                      "DtMod": "2023-11-15T19:27:11.350669441Z",
                      "LastSeen": "2023-11-15T19:27:11.350671915Z",
                      "Auth": 0,
                      "PicFileId": "someStr",
                      "Nick": "someStr",
                      "Btw": "someStr",
                      "Buddies": [
                        -9007199254740991
                      ],
                      "BtwEmoji": "someStr",
                      "Offline": true
                    }
                  ],
                  "BuddyRequestsBy": [
                    {
                      "Id": -9007199254740991,
                      "DtMade": "2023-11-15T19:27:11.350684853Z",
                      "DtMod": "2023-11-15T19:27:11.350687159Z",
                      "LastSeen": "2023-11-15T19:27:11.350689535Z",
                      "Auth": 0,
                      "PicFileId": "someStr",
                      "Nick": "someStr",
                      "Btw": "someStr",
                      "Buddies": [
                        -9007199254740991
                      ],
                      "BtwEmoji": "someStr",
                      "Offline": true
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/userBuddiesAdd": {
      "post": {
        "operationId": "__userBuddiesAdd",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `__userBuddiesAdd_In`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/struct___NickOrEmailAddr_string__",
                "type": "object"
              },
              "example": {
                "NickOrEmailAddr": "someStr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `__userBuddiesAdd_Out`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/struct___Done_bool__",
                  "type": "object"
                },
                "example": {
                  "Done": true
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Possible `text/plain` responses:\n- `__userBuddiesAdd_ExpectedEitherNickNameOrEmailAddr`\n- `DbUpdate_ExpectedChangesForUpdate`\n- `DbUpdate_ExpectedQueryForUpdate`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "DbUpdate_ExpectedChangesForUpdate": {
                    "value": "DbUpdate_ExpectedChangesForUpdate"
                  },
                  "DbUpdate_ExpectedQueryForUpdate": {
                    "value": "DbUpdate_ExpectedQueryForUpdate"
                  },
                  "__userBuddiesAdd_ExpectedEitherNickNameOrEmailAddr": {
                    "value": "__userBuddiesAdd_ExpectedEitherNickNameOrEmailAddr"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/userBy": {
      "post": {
        "operationId": "__userBy",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `__userBy_In`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/struct___EmailAddr_string__NickName_string__",
                "type": "object"
              },
              "example": {
                "EmailAddr": "someStr",
                "NickName": "someStr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `yo/util.Return[*kaffe/app.User]`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util_Return__kaffe_app_User_",
                  "type": "object"
                },
                "example": {
                  "Result": {
                    "Id": -9007199254740991,
                    "DtMade": "2023-11-15T19:27:11.350798847Z",
                    "DtMod": "2023-11-15T19:27:11.350801244Z",
                    "LastSeen": "2023-11-15T19:27:11.350803563Z",
                    "Auth": 0,
                    "PicFileId": "someStr",
                    "Nick": "someStr",
                    "Btw": "someStr",
                    "Buddies": [
                      -9007199254740991
                    ],
                    "BtwEmoji": "someStr",
                    "Offline": true
                  }
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Possible `text/plain` responses:\n- `__userBy_ExpectedEitherNickNameOrEmailAddr`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "__userBy_ExpectedEitherNickNameOrEmailAddr": {
                    "value": "__userBy_ExpectedEitherNickNameOrEmailAddr"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/userSignInOrReset": {
      "post": {
        "operationId": "__userSignInOrReset",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `kaffe/app.ApiUserSignInOrReset`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kaffe_ApiUserSignInOrReset",
                "type": "object"
              },
              "example": {
                "NickOrEmailAddr": "someStr",
                "PasswordPlain": "lenOfMin6AndMax64",
                "Password2Plain": "lenOfMin6AndMax64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `yo/util.None`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util_None",
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "401": {
            "description": "Possible `text/plain` responses:\n- `__userSignInOrReset_WrongPassword`\n- `___yo_authLoginOrFinalizePwdReset_WrongPassword`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "___yo_authLoginOrFinalizePwdReset_WrongPassword": {
                    "value": "___yo_authLoginOrFinalizePwdReset_WrongPassword"
                  },
                  "__userSignInOrReset_WrongPassword": {
                    "value": "__userSignInOrReset_WrongPassword"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `___yo_authLoginOrFinalizePwdReset_AccountDoesNotExist`\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  },
                  "___yo_authLoginOrFinalizePwdReset_AccountDoesNotExist": {
                    "value": "___yo_authLoginOrFinalizePwdReset_AccountDoesNotExist"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Possible `text/plain` responses:\n- `__userSignInOrReset_ExpectedPasswordAndNickOrEmailAddr`\n- `___yo_authLoginOrFinalizePwdReset_EmailRequiredButMissing`\n- `___yo_authLoginOrFinalizePwdReset_EmailInvalid`\n- `___yo_authLoginOrFinalizePwdReset_NewPasswordTooShort`\n- `___yo_authLoginOrFinalizePwdReset_NewPasswordTooLong`\n- `___yo_authLoginOrFinalizePwdReset_NewPasswordExpectedToDiffer`\n- `___yo_authLoginOrFinalizePwdReset_PwdResetRequired`\n- `___yo_authLoginOrFinalizePwdReset_NewPasswordInvalid`\n- `DbUpdate_ExpectedChangesForUpdate`\n- `DbUpdate_ExpectedQueryForUpdate`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "DbUpdate_ExpectedChangesForUpdate": {
                    "value": "DbUpdate_ExpectedChangesForUpdate"
                  },
                  "DbUpdate_ExpectedQueryForUpdate": {
                    "value": "DbUpdate_ExpectedQueryForUpdate"
                  },
                  "___yo_authLoginOrFinalizePwdReset_EmailInvalid": {
                    "value": "___yo_authLoginOrFinalizePwdReset_EmailInvalid"
                  },
                  "___yo_authLoginOrFinalizePwdReset_EmailRequiredButMissing": {
                    "value": "___yo_authLoginOrFinalizePwdReset_EmailRequiredButMissing"
                  },
                  "___yo_authLoginOrFinalizePwdReset_NewPasswordExpectedToDiffer": {
                    "value": "___yo_authLoginOrFinalizePwdReset_NewPasswordExpectedToDiffer"
                  },
                  "___yo_authLoginOrFinalizePwdReset_NewPasswordInvalid": {
                    "value": "___yo_authLoginOrFinalizePwdReset_NewPasswordInvalid"
                  },
                  "___yo_authLoginOrFinalizePwdReset_NewPasswordTooLong": {
                    "value": "___yo_authLoginOrFinalizePwdReset_NewPasswordTooLong"
                  },
                  "___yo_authLoginOrFinalizePwdReset_NewPasswordTooShort": {
                    "value": "___yo_authLoginOrFinalizePwdReset_NewPasswordTooShort"
                  },
                  "___yo_authLoginOrFinalizePwdReset_PwdResetRequired": {
                    "value": "___yo_authLoginOrFinalizePwdReset_PwdResetRequired"
                  },
                  "__userSignInOrReset_ExpectedPasswordAndNickOrEmailAddr": {
                    "value": "__userSignInOrReset_ExpectedPasswordAndNickOrEmailAddr"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Possible `text/plain` responses:\n- `___yo_authLoginOrFinalizePwdReset_PwdReqExpired`\n- `___yo_authLoginOrFinalizePwdReset_OkButFailedToCreateSignedToken`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "___yo_authLoginOrFinalizePwdReset_OkButFailedToCreateSignedToken": {
                    "value": "___yo_authLoginOrFinalizePwdReset_OkButFailedToCreateSignedToken"
                  },
                  "___yo_authLoginOrFinalizePwdReset_PwdReqExpired": {
                    "value": "___yo_authLoginOrFinalizePwdReset_PwdReqExpired"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/userSignOut": {
      "post": {
        "operationId": "__userSignOut",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `yo/util.None`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/util_None",
                "type": "object"
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `yo/util.None`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util_None",
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/userSignUpOrForgotPassword": {
      "post": {
        "operationId": "__userSignUpOrForgotPassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "backend type ref: `kaffe/app.ApiNickOrEmailAddr`",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kaffe_ApiNickOrEmailAddr",
                "type": "object"
              },
              "example": {
                "NickOrEmailAddr": "someStr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `yo/util.None`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util_None",
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Possible `text/plain` responses:\n- `___yo_authRegister_EmailAddrAlreadyExists`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "___yo_authRegister_EmailAddrAlreadyExists": {
                    "value": "___yo_authRegister_EmailAddrAlreadyExists"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Possible `text/plain` responses:\n- `__userSignUpOrForgotPassword_EmailRequiredButMissing`\n- `__userSignUpOrForgotPassword_EmailInvalid`\n- `___yo_authRegister_EmailRequiredButMissing`\n- `___yo_authRegister_EmailInvalid`\n- `___yo_authRegister_PasswordTooShort`\n- `___yo_authRegister_PasswordTooLong`\n- `___yo_authRegister_PasswordInvalid`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "___yo_authRegister_EmailInvalid": {
                    "value": "___yo_authRegister_EmailInvalid"
                  },
                  "___yo_authRegister_EmailRequiredButMissing": {
                    "value": "___yo_authRegister_EmailRequiredButMissing"
                  },
                  "___yo_authRegister_PasswordInvalid": {
                    "value": "___yo_authRegister_PasswordInvalid"
                  },
                  "___yo_authRegister_PasswordTooLong": {
                    "value": "___yo_authRegister_PasswordTooLong"
                  },
                  "___yo_authRegister_PasswordTooShort": {
                    "value": "___yo_authRegister_PasswordTooShort"
                  },
                  "__userSignUpOrForgotPassword_EmailInvalid": {
                    "value": "__userSignUpOrForgotPassword_EmailInvalid"
                  },
                  "__userSignUpOrForgotPassword_EmailRequiredButMissing": {
                    "value": "__userSignUpOrForgotPassword_EmailRequiredButMissing"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/_/userUpdate": {
      "post": {
        "operationId": "__userUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/yoFail"
          },
          {
            "$ref": "#/components/parameters/yoValiOnly"
          }
        ],
        "requestBody": {
          "description": "`multipart/form-data` form-fields:\n1. binary file uploads in form field `files`, and\n2. `application/json` request payload as `text/plain` in form field `_`, as elaborated in this example (backend type ref: `yo/db.ApiUpdateArgs[kaffe/app.User,kaffe/app.UserField]`)",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/yodb_ApiUpdateArgs_kaffe_app_User_kaffe_app_UserField_",
                "type": "object"
              },
              "example": {
                "Id": -9007199254740991,
                "Changes": {
                  "Id": -9007199254740991,
                  "DtMade": "2023-11-15T19:27:11.351017973Z",
                  "DtMod": "2023-11-15T19:27:11.351020616Z",
                  "LastSeen": "2023-11-15T19:27:11.351023122Z",
                  "Auth": {},
                  "PicFileId": "someStr",
                  "Nick": "someStr",
                  "Btw": "someStr",
                  "Buddies": [
                    -9007199254740991
                  ],
                  "BtwEmoji": "someStr",
                  "Offline": true
                },
                "ChangedFields": [
                  "someStr"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "backend type ref: `yo/util.None`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "X-YoUserEmailAddr": {
                "$ref": "#/components/headers/X-YoUserEmailAddr"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util_None",
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "403": {
            "description": "Possible `text/plain` responses:\n- `Unauthorized`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": {
                    "value": "Unauthorized"
                  }
                }
              }
            }
          },
          "406": {
            "description": "Possible `text/plain` responses:\n- `UnacceptableContentLength`\n- `UnacceptableContentType`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "UnacceptableContentLength": {
                    "value": "UnacceptableContentLength"
                  },
                  "UnacceptableContentType": {
                    "value": "UnacceptableContentType"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Possible `text/plain` responses:\n- `__userUpdate_NicknameAlreadyExists`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "__userUpdate_NicknameAlreadyExists": {
                    "value": "__userUpdate_NicknameAlreadyExists"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Possible `text/plain` responses:\n- `__userUpdate_ExpectedNonEmptyNickname`\n- `DbUpdExpectedIdGt0`\n- `DbUpdate_ExpectedChangesForUpdate`\n- `DbUpdate_ExpectedQueryForUpdate`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "DbUpdExpectedIdGt0": {
                    "value": "DbUpdExpectedIdGt0"
                  },
                  "DbUpdate_ExpectedChangesForUpdate": {
                    "value": "DbUpdate_ExpectedChangesForUpdate"
                  },
                  "DbUpdate_ExpectedQueryForUpdate": {
                    "value": "DbUpdate_ExpectedQueryForUpdate"
                  },
                  "__userUpdate_ExpectedNonEmptyNickname": {
                    "value": "__userUpdate_ExpectedNonEmptyNickname"
                  }
                }
              }
            }
          },
          "504": {
            "description": "Possible `text/plain` responses:\n- `TimedOut`",
            "headers": {
              "Cache-Control": {
                "$ref": "#/components/headers/Cache-Control"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              }
            },
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": {
                    "value": "TimedOut"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "kaffe_ApiArgPeriod": {
        "description": "kaffe.ApiArgPeriod",
        "type": "object",
        "properties": {
          "OnlyBy": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            }
          },
          "Period": {
            "$ref": "#/components/schemas/kaffe_YearAndMonth",
            "type": "object"
          }
        },
        "examples": [
          {
            "Period": {
              "Year": 65535,
              "Month": 255
            },
            "OnlyBy": [
              -9007199254740991
            ]
          }
        ]
      },
      "kaffe_ApiNickOrEmailAddr": {
        "description": "kaffe.ApiNickOrEmailAddr",
        "type": "object",
        "properties": {
          "NickOrEmailAddr": {
            "type": "string"
          }
        },
        "examples": [
          {
            "NickOrEmailAddr": "someStr"
          }
        ]
      },
      "kaffe_ApiUserSignInOrReset": {
        "description": "kaffe.ApiUserSignInOrReset",
        "type": "object",
        "properties": {
          "ApiNickOrEmailAddr": {
            "$ref": "#/components/schemas/kaffe_ApiNickOrEmailAddr",
            "type": "object"
          },
          "Password2Plain": {
            "type": "string",
            "format": "password",
            "minLength": 6,
            "maxLength": 64
          },
          "PasswordPlain": {
            "type": "string",
            "format": "password",
            "minLength": 6,
            "maxLength": 64
          }
        },
        "examples": [
          {
            "NickOrEmailAddr": "someStr",
            "PasswordPlain": "lenOfMin6AndMax64",
            "Password2Plain": "lenOfMin6AndMax64"
          }
        ]
      },
      "kaffe_Post": {
        "description": "kaffe.Post",
        "type": "object",
        "properties": {
          "By": {
            "type": "integer",
            "format": "int64",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "DtMade": {
            "type": "string",
            "format": "date-time"
          },
          "DtMod": {
            "type": "string",
            "format": "date-time"
          },
          "FileContentTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Files": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Htm": {
            "type": "string"
          },
          "Id": {
            "type": "integer",
            "format": "int64",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "To": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            }
          }
        },
        "examples": [
          {
            "Id": -9007199254740991,
            "DtMade": "2023-11-15T19:27:11.350451121Z",
            "DtMod": "2023-11-15T19:27:11.35045471Z",
            "By": {},
            "To": [
              -9007199254740991
            ],
            "Htm": "someStr",
            "Files": [
              "someStr"
            ],
            "FileContentTypes": [
              "someStr"
            ]
          }
        ]
      },
      "kaffe_PostsListResult": {
        "description": "kaffe.PostsListResult",
        "type": "object",
        "properties": {
          "NextSince": {
            "type": "string",
            "format": "date-time"
          },
          "Posts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "By": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991
                },
                "DtMade": {
                  "type": "string",
                  "format": "date-time"
                },
                "DtMod": {
                  "type": "string",
                  "format": "date-time"
                },
                "FileContentTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Files": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Htm": {
                  "type": "string"
                },
                "Id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991
                },
                "To": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": -9007199254740991,
                    "maximum": 9007199254740991
                  }
                }
              }
            }
          },
          "UnreadCounts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            }
          }
        },
        "examples": [
          {
            "Posts": [
              {
                "Id": -9007199254740991,
                "DtMade": "2023-11-15T19:27:11.350570546Z",
                "DtMod": "2023-11-15T19:27:11.350573099Z",
                "By": 0,
                "To": [
                  -9007199254740991
                ],
                "Htm": "someStr",
                "Files": [
                  "someStr"
                ],
                "FileContentTypes": [
                  "someStr"
                ]
              }
            ],
            "NextSince": "2023-11-15T19:27:11.350582734Z",
            "UnreadCounts": {
              "someMapKey1": -9007199254740991,
              "some_map_key_2": -9007199254740991
            }
          }
        ]
      },
      "kaffe_User": {
        "description": "kaffe.User",
        "type": "object",
        "properties": {
          "Auth": {
            "type": "integer",
            "format": "int64",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "Btw": {
            "type": "string"
          },
          "BtwEmoji": {
            "type": "string"
          },
          "Buddies": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            }
          },
          "DtMade": {
            "type": "string",
            "format": "date-time"
          },
          "DtMod": {
            "type": "string",
            "format": "date-time"
          },
          "Id": {
            "type": "integer",
            "format": "int64",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "LastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "Nick": {
            "type": "string"
          },
          "Offline": {
            "type": "boolean"
          },
          "PicFileId": {
            "type": "string"
          }
        },
        "examples": [
          {
            "Id": -9007199254740991,
            "DtMade": "2023-11-15T19:27:11.351039233Z",
            "DtMod": "2023-11-15T19:27:11.35104162Z",
            "LastSeen": "2023-11-15T19:27:11.351043972Z",
            "Auth": {},
            "PicFileId": "someStr",
            "Nick": "someStr",
            "Btw": "someStr",
            "Buddies": [
              -9007199254740991
            ],
            "BtwEmoji": "someStr",
            "Offline": true
          }
        ]
      },
      "kaffe_YearAndMonth": {
        "description": "kaffe.YearAndMonth",
        "type": "object",
        "properties": {
          "Month": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 255
          },
          "Year": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 65535
          }
        },
        "examples": [
          {
            "Year": 65535,
            "Month": 255
          }
        ]
      },
      "struct___Buddies____kaffe_User__BuddyRequestsBy____kaffe_User__": {
        "description": "struct { Buddies []*kaffe.User; BuddyRequestsBy []*kaffe.User }",
        "type": "object",
        "properties": {
          "Buddies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Auth": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991
                },
                "Btw": {
                  "type": "string"
                },
                "BtwEmoji": {
                  "type": "string"
                },
                "Buddies": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": -9007199254740991,
                    "maximum": 9007199254740991
                  }
                },
                "DtMade": {
                  "type": "string",
                  "format": "date-time"
                },
                "DtMod": {
                  "type": "string",
                  "format": "date-time"
                },
                "Id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991
                },
                "LastSeen": {
                  "type": "string",
                  "format": "date-time"
                },
                "Nick": {
                  "type": "string"
                },
                "Offline": {
                  "type": "boolean"
                },
                "PicFileId": {
                  "type": "string"
                }
              }
            }
          },
          "BuddyRequestsBy": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Auth": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991
                },
                "Btw": {
                  "type": "string"
                },
                "BtwEmoji": {
                  "type": "string"
                },
                "Buddies": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": -9007199254740991,
                    "maximum": 9007199254740991
                  }
                },
                "DtMade": {
                  "type": "string",
                  "format": "date-time"
                },
                "DtMod": {
                  "type": "string",
                  "format": "date-time"
                },
                "Id": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991
                },
                "LastSeen": {
                  "type": "string",
                  "format": "date-time"
                },
                "Nick": {
                  "type": "string"
                },
                "Offline": {
                  "type": "boolean"
                },
                "PicFileId": {
                  "type": "string"
                }
              }
            }
          }
        },
        "examples": [
          {
            "Buddies": [
              {
                "Id": -9007199254740991,
                "DtMade": "2023-11-15T19:27:11.350667006Z",
                "DtMod": "2023-11-15T19:27:11.350669441Z",
                "LastSeen": "2023-11-15T19:27:11.350671915Z",
                "Auth": 0,
                "PicFileId": "someStr",
                "Nick": "someStr",
                "Btw": "someStr",
                "Buddies": [
                  -9007199254740991
                ],
                "BtwEmoji": "someStr",
                "Offline": true
              }
            ],
            "BuddyRequestsBy": [
              {
                "Id": -9007199254740991,
                "DtMade": "2023-11-15T19:27:11.350684853Z",
                "DtMod": "2023-11-15T19:27:11.350687159Z",
                "LastSeen": "2023-11-15T19:27:11.350689535Z",
                "Auth": 0,
                "PicFileId": "someStr",
                "Nick": "someStr",
                "Btw": "someStr",
                "Buddies": [
                  -9007199254740991
                ],
                "BtwEmoji": "someStr",
                "Offline": true
              }
            ]
          }
        ]
      },
      "struct___DeletedPostIds___yodb_I64__": {
        "description": "struct { DeletedPostIds []yodb.I64 }",
        "type": "object",
        "properties": {
          "DeletedPostIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            }
          }
        },
        "examples": [
          {
            "DeletedPostIds": [
              -9007199254740991
            ]
          }
        ]
      },
      "struct___Done_bool__": {
        "description": "struct { Done bool }",
        "type": "object",
        "properties": {
          "Done": {
            "type": "boolean"
          }
        },
        "examples": [
          {
            "Done": true
          }
        ]
      },
      "struct___EmailAddr_string__NickName_string__": {
        "description": "struct { EmailAddr string; NickName string }",
        "type": "object",
        "properties": {
          "EmailAddr": {
            "type": "string",
            "format": "email",
            "minLength": 5,
            "maxLength": 255
          },
          "NickName": {
            "type": "string"
          }
        },
        "examples": [
          {
            "EmailAddr": "someStr",
            "NickName": "someStr"
          }
        ]
      },
      "struct___Id_yodb_I64__": {
        "description": "struct { Id yodb.I64 }",
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          }
        },
        "examples": [
          {
            "Id": -9007199254740991
          }
        ]
      },
      "struct___NickOrEmailAddr_string__": {
        "description": "struct { NickOrEmailAddr string }",
        "type": "object",
        "properties": {
          "NickOrEmailAddr": {
            "type": "string"
          }
        },
        "examples": [
          {
            "NickOrEmailAddr": "someStr"
          }
        ]
      },
      "struct___OutOfPostIds___yodb_I64__": {
        "description": "struct { OutOfPostIds []yodb.I64 }",
        "type": "object",
        "properties": {
          "OutOfPostIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            }
          }
        },
        "examples": [
          {
            "OutOfPostIds": [
              -9007199254740991
            ]
          }
        ]
      },
      "struct___Periods___kaffe_YearAndMonth__": {
        "description": "struct { Periods []kaffe.YearAndMonth }",
        "type": "object",
        "properties": {
          "Periods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Month": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "maximum": 255
                },
                "Year": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "maximum": 65535
                }
              }
            }
          }
        },
        "examples": [
          {
            "Periods": [
              {
                "Year": 65535,
                "Month": 255
              }
            ]
          }
        ]
      },
      "struct___Since__yodb_DateTime__OnlyBy___yodb_I64__": {
        "description": "struct { Since *yodb.DateTime; OnlyBy []yodb.I64 }",
        "type": "object",
        "properties": {
          "OnlyBy": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            }
          },
          "Since": {
            "type": "string",
            "format": "date-time"
          }
        },
        "examples": [
          {
            "Since": "2023-11-15T19:27:11.350626362Z",
            "OnlyBy": [
              -9007199254740991
            ]
          }
        ]
      },
      "struct___WithUserIds___yodb_I64__": {
        "description": "struct { WithUserIds []yodb.I64 }",
        "type": "object",
        "properties": {
          "WithUserIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            }
          }
        },
        "examples": [
          {
            "WithUserIds": [
              -9007199254740991
            ]
          }
        ]
      },
      "util_None": {
        "description": "util.None",
        "type": "object",
        "examples": [
          {}
        ]
      },
      "util_Return__kaffe_app_User_": {
        "description": "util.Return[*kaffe/app.User]",
        "type": "object",
        "properties": {
          "Result": {
            "type": "object",
            "properties": {
              "Auth": {
                "type": "integer",
                "format": "int64",
                "minimum": -9007199254740991,
                "maximum": 9007199254740991
              },
              "Btw": {
                "type": "string"
              },
              "BtwEmoji": {
                "type": "string"
              },
              "Buddies": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": -9007199254740991,
                  "maximum": 9007199254740991
                }
              },
              "DtMade": {
                "type": "string",
                "format": "date-time"
              },
              "DtMod": {
                "type": "string",
                "format": "date-time"
              },
              "Id": {
                "type": "integer",
                "format": "int64",
                "minimum": -9007199254740991,
                "maximum": 9007199254740991
              },
              "LastSeen": {
                "type": "string",
                "format": "date-time"
              },
              "Nick": {
                "type": "string"
              },
              "Offline": {
                "type": "boolean"
              },
              "PicFileId": {
                "type": "string"
              }
            }
          }
        },
        "examples": [
          {
            "Result": {
              "Id": -9007199254740991,
              "DtMade": "2023-11-15T19:27:11.350798847Z",
              "DtMod": "2023-11-15T19:27:11.350801244Z",
              "LastSeen": "2023-11-15T19:27:11.350803563Z",
              "Auth": 0,
              "PicFileId": "someStr",
              "Nick": "someStr",
              "Btw": "someStr",
              "Buddies": [
                -9007199254740991
              ],
              "BtwEmoji": "someStr",
              "Offline": true
            }
          }
        ]
      },
      "util_Return_map_string_string_": {
        "description": "util.Return[map[string]string]",
        "type": "object",
        "properties": {
          "Result": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "examples": [
          {
            "Result": {
              "someMapKey1": "someStr",
              "some_map_key_2": "someStr"
            }
          }
        ]
      },
      "util_Return_yo_db_I64_": {
        "description": "util.Return[yo/db.I64]",
        "type": "object",
        "properties": {
          "Result": {
            "type": "integer",
            "format": "int64",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          }
        },
        "examples": [
          {
            "Result": -9007199254740991
          }
        ]
      },
      "yodb_ApiUpdateArgs_kaffe_app_User_kaffe_app_UserField_": {
        "description": "yodb.ApiUpdateArgs[kaffe/app.User,kaffe/app.UserField]",
        "type": "object",
        "properties": {
          "ChangedFields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Changes": {
            "$ref": "#/components/schemas/kaffe_User",
            "type": "object"
          },
          "Id": {
            "type": "integer",
            "format": "int64",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          }
        },
        "examples": [
          {
            "Id": -9007199254740991,
            "Changes": {
              "Id": -9007199254740991,
              "DtMade": "2023-11-15T19:27:11.351017973Z",
              "DtMod": "2023-11-15T19:27:11.351020616Z",
              "LastSeen": "2023-11-15T19:27:11.351023122Z",
              "Auth": {},
              "PicFileId": "someStr",
              "Nick": "someStr",
              "Btw": "someStr",
              "Buddies": [
                -9007199254740991
              ],
              "BtwEmoji": "someStr",
              "Offline": true
            },
            "ChangedFields": [
              "someStr"
            ]
          }
        ]
      }
    },
    "parameters": {
      "yoFail": {
        "name": "yoFail",
        "in": "query",
        "description": "optional: if not missing or empty, enforces an early error response (prior to any request parsing or handling) with the specified HTTP status code or 500 (eg. for client-side unit-test cases of error-handling)",
        "content": {
          "text/plain": {
            "example": ""
          }
        }
      },
      "yoValiOnly": {
        "name": "yoValiOnly",
        "in": "query",
        "description": "optional: if not missing or empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
        "content": {
          "text/plain": {
            "example": ""
          }
        }
      }
    },
    "headers": {
      "Cache-Control": {
        "description": "always `no-store`",
        "content": {
          "text/plain": {
            "example": "no-store"
          }
        }
      },
      "Content-Type": {
        "description": "always `application/json` if `200` OK response, else always `text/plain`",
        "content": {
          "text/plain": {
            "examples": {
              "application/json": {
                "value": "application/json"
              },
              "text/plain": {
                "value": "text/plain"
              }
            }
          }
        }
      },
      "X-YoUserEmailAddr": {
        "description": "empty if not authenticated, else current `User`'s `Account`-identifying `EmailAddr`",
        "content": {
          "text/plain": {
            "example": "user123@foo.bar"
          }
        }
      }
    }
  }
}