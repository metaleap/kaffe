{
  "openapi": "3.1.0",
  "info": {
    "title": "kaffe.chat",
    "version": "23.318",
    "contact": {
      "name": "Permalink",
      "url": "https://kaffe.chat/__static/openapi.json"
    }
  },
  "paths": {
    "/_/postDelete": {
      "post": {
        "operationId": "__postDelete",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `__postDelete_In`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "Id": -9007199254740991
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `yo/util.None`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "__postDelete_InvalidPostId": "__postDelete_InvalidPostId"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/postEmojiFullList": {
      "post": {
        "operationId": "__postEmojiFullList",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `yo/util.None`",
          "required": true,
          "content": {
            "application/json": {
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `yo/util.Return[map[string]string]`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "Result": {
                    "someKey": "someStr"
                  }
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/postMonthsUtc": {
      "post": {
        "operationId": "__postMonthsUtc",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `__postMonthsUtc_In`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "WithUserIds": [
                  -9007199254740991
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `__postMonthsUtc_Out`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "Periods": [
                    {
                      "Year": 65535,
                      "Month": 255
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/postNew": {
      "post": {
        "operationId": "__postNew",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `kaffe/app.Post`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "Id": -9007199254740991,
                "DtMade": "2023-11-14T15:10:30.743650686Z",
                "DtMod": "2023-11-14T15:10:30.743653714Z",
                "By": {},
                "To": [
                  -9007199254740991
                ],
                "Htm": "someStr",
                "Files": [
                  "someStr"
                ],
                "FileContentTypes": [
                  "someStr"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `yo/util.Return[yo/db.I64]`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "Result": -9007199254740991
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "__postNew_ExpectedEmptyFilesFieldWithUploadedFilesInMultipartForm": "__postNew_ExpectedEmptyFilesFieldWithUploadedFilesInMultipartForm",
                  "__postNew_ExpectedNonEmptyPost": "__postNew_ExpectedNonEmptyPost",
                  "__postNew_ExpectedOnlyBuddyRecipients": "__postNew_ExpectedOnlyBuddyRecipients"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/postsDeleted": {
      "post": {
        "operationId": "__postsDeleted",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `__postsDeleted_In`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "OutOfPostIds": [
                  -9007199254740991
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `__postsDeleted_Out`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "DeletedPostIds": [
                    -9007199254740991
                  ]
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/postsForMonthUtc": {
      "post": {
        "operationId": "__postsForMonthUtc",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `kaffe/app.ApiArgPeriod`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "Period": {
                  "Year": 65535,
                  "Month": 255
                },
                "OnlyBy": [
                  -9007199254740991
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `kaffe/app.PostsListResult`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "Posts": [
                    {
                      "Id": -9007199254740991,
                      "DtMade": "2023-11-14T15:10:30.743725669Z",
                      "DtMod": "2023-11-14T15:10:30.743727878Z",
                      "By": 0,
                      "To": [
                        -9007199254740991
                      ],
                      "Htm": "someStr",
                      "Files": [
                        "someStr"
                      ],
                      "FileContentTypes": [
                        "someStr"
                      ]
                    }
                  ],
                  "NextSince": "2023-11-14T15:10:30.743735908Z",
                  "UnreadCounts": {
                    "someKey": -9007199254740991
                  }
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/postsRecent": {
      "post": {
        "operationId": "__postsRecent",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `__postsRecent_In`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "Since": "2023-11-14T15:10:30.74376216Z",
                "OnlyBy": [
                  -9007199254740991
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `kaffe/app.PostsListResult`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "Posts": [
                    {
                      "Id": -9007199254740991,
                      "DtMade": "2023-11-14T15:10:30.743767867Z",
                      "DtMod": "2023-11-14T15:10:30.743769962Z",
                      "By": 0,
                      "To": [
                        -9007199254740991
                      ],
                      "Htm": "someStr",
                      "Files": [
                        "someStr"
                      ],
                      "FileContentTypes": [
                        "someStr"
                      ]
                    }
                  ],
                  "NextSince": "2023-11-14T15:10:30.743777865Z",
                  "UnreadCounts": {
                    "someKey": -9007199254740991
                  }
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/userBuddies": {
      "post": {
        "operationId": "__userBuddies",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `yo/util.None`",
          "required": true,
          "content": {
            "application/json": {
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `__userBuddies_Out`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "Buddies": [
                    {
                      "Id": -9007199254740991,
                      "DtMade": "2023-11-14T15:10:30.743804758Z",
                      "DtMod": "2023-11-14T15:10:30.743806859Z",
                      "LastSeen": "2023-11-14T15:10:30.743809064Z",
                      "Auth": 0,
                      "PicFileId": "someStr",
                      "Nick": "someStr",
                      "Btw": "someStr",
                      "Buddies": [
                        -9007199254740991
                      ],
                      "BtwEmoji": "someStr",
                      "Offline": true
                    }
                  ],
                  "BuddyRequestsBy": [
                    {
                      "Id": -9007199254740991,
                      "DtMade": "2023-11-14T15:10:30.743818964Z",
                      "DtMod": "2023-11-14T15:10:30.743821033Z",
                      "LastSeen": "2023-11-14T15:10:30.743823094Z",
                      "Auth": 0,
                      "PicFileId": "someStr",
                      "Nick": "someStr",
                      "Btw": "someStr",
                      "Buddies": [
                        -9007199254740991
                      ],
                      "BtwEmoji": "someStr",
                      "Offline": true
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/userBuddiesAdd": {
      "post": {
        "operationId": "__userBuddiesAdd",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `__userBuddiesAdd_In`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "NickOrEmailAddr": "someStr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `__userBuddiesAdd_Out`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "Done": true
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "DbUpdate_ExpectedChangesForUpdate": "DbUpdate_ExpectedChangesForUpdate",
                  "DbUpdate_ExpectedQueryForUpdate": "DbUpdate_ExpectedQueryForUpdate",
                  "__userBuddiesAdd_ExpectedEitherNickNameOrEmailAddr": "__userBuddiesAdd_ExpectedEitherNickNameOrEmailAddr"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/userBy": {
      "post": {
        "operationId": "__userBy",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `__userBy_In`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "EmailAddr": "someStr",
                "NickName": "someStr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `kaffe/app.User`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {
                  "Id": -9007199254740991,
                  "DtMade": "2023-11-14T15:10:30.743887178Z",
                  "DtMod": "2023-11-14T15:10:30.74388938Z",
                  "LastSeen": "2023-11-14T15:10:30.743891476Z",
                  "Auth": {},
                  "PicFileId": "someStr",
                  "Nick": "someStr",
                  "Btw": "someStr",
                  "Buddies": [
                    -9007199254740991
                  ],
                  "BtwEmoji": "someStr",
                  "Offline": true
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "__userBy_ExpectedEitherNickNameOrEmailAddr": "__userBy_ExpectedEitherNickNameOrEmailAddr"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/userSignInOrReset": {
      "post": {
        "operationId": "__userSignInOrReset",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `kaffe/app.ApiUserSignInOrReset`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "NickOrEmailAddr": "someStr",
                "PasswordPlain": "someStr",
                "Password2Plain": "someStr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `yo/util.None`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "400": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "___yo_authLoginOrFinalizePwdReset_AccountDoesNotExist": "___yo_authLoginOrFinalizePwdReset_AccountDoesNotExist"
                }
              }
            }
          },
          "401": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "___yo_authLoginOrFinalizePwdReset_WrongPassword": "___yo_authLoginOrFinalizePwdReset_WrongPassword",
                  "__userSignInOrReset_WrongPassword": "__userSignInOrReset_WrongPassword"
                }
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "422": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "DbUpdate_ExpectedChangesForUpdate": "DbUpdate_ExpectedChangesForUpdate",
                  "DbUpdate_ExpectedQueryForUpdate": "DbUpdate_ExpectedQueryForUpdate",
                  "___yo_authLoginOrFinalizePwdReset_EmailInvalid": "___yo_authLoginOrFinalizePwdReset_EmailInvalid",
                  "___yo_authLoginOrFinalizePwdReset_EmailRequiredButMissing": "___yo_authLoginOrFinalizePwdReset_EmailRequiredButMissing",
                  "___yo_authLoginOrFinalizePwdReset_NewPasswordExpectedToDiffer": "___yo_authLoginOrFinalizePwdReset_NewPasswordExpectedToDiffer",
                  "___yo_authLoginOrFinalizePwdReset_NewPasswordInvalid": "___yo_authLoginOrFinalizePwdReset_NewPasswordInvalid",
                  "___yo_authLoginOrFinalizePwdReset_NewPasswordTooLong": "___yo_authLoginOrFinalizePwdReset_NewPasswordTooLong",
                  "___yo_authLoginOrFinalizePwdReset_NewPasswordTooShort": "___yo_authLoginOrFinalizePwdReset_NewPasswordTooShort",
                  "___yo_authLoginOrFinalizePwdReset_PwdResetRequired": "___yo_authLoginOrFinalizePwdReset_PwdResetRequired",
                  "__userSignInOrReset_ExpectedPasswordAndNickOrEmailAddr": "__userSignInOrReset_ExpectedPasswordAndNickOrEmailAddr"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength",
                  "___yo_authLoginOrFinalizePwdReset_OkButFailedToCreateSignedToken": "___yo_authLoginOrFinalizePwdReset_OkButFailedToCreateSignedToken",
                  "___yo_authLoginOrFinalizePwdReset_PwdReqExpired": "___yo_authLoginOrFinalizePwdReset_PwdReqExpired"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/userSignOut": {
      "post": {
        "operationId": "__userSignOut",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `yo/util.None`",
          "required": true,
          "content": {
            "application/json": {
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `yo/util.None`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/userSignUpOrForgotPassword": {
      "post": {
        "operationId": "__userSignUpOrForgotPassword",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `kaffe/app.ApiNickOrEmailAddr`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "NickOrEmailAddr": "someStr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `yo/util.None`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "409": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "___yo_authRegister_EmailAddrAlreadyExists": "___yo_authRegister_EmailAddrAlreadyExists"
                }
              }
            }
          },
          "422": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "___yo_authRegister_EmailInvalid": "___yo_authRegister_EmailInvalid",
                  "___yo_authRegister_EmailRequiredButMissing": "___yo_authRegister_EmailRequiredButMissing",
                  "___yo_authRegister_PasswordInvalid": "___yo_authRegister_PasswordInvalid",
                  "___yo_authRegister_PasswordTooLong": "___yo_authRegister_PasswordTooLong",
                  "___yo_authRegister_PasswordTooShort": "___yo_authRegister_PasswordTooShort",
                  "__userSignUpOrForgotPassword_EmailInvalid": "__userSignUpOrForgotPassword_EmailInvalid",
                  "__userSignUpOrForgotPassword_EmailRequiredButMissing": "__userSignUpOrForgotPassword_EmailRequiredButMissing"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    },
    "/_/userUpdate": {
      "post": {
        "operationId": "__userUpdate",
        "parameters": [
          {
            "name": "yoValiOnly",
            "in": "query",
            "description": "if not empty, enforces request-validation-only, with no further actual work performed to produce results and/or effects",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          },
          {
            "name": "yoFail",
            "in": "query",
            "description": "if not empty, enforces an early error response (prior to any request parsing or processing) with the specified HTTP status code (eg. for tests of error-handling)",
            "content": {
              "text/plain": {
                "example": ""
              }
            }
          }
        ],
        "requestBody": {
          "description": "Internal type ident: `yo/db.ApiUpdateArgs[kaffe/app.User,kaffe/app.UserField]`",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "Id": -9007199254740991,
                "Changes": {
                  "Id": -9007199254740991,
                  "DtMade": "2023-11-14T15:10:30.744056681Z",
                  "DtMod": "2023-11-14T15:10:30.744058974Z",
                  "LastSeen": "2023-11-14T15:10:30.744061082Z",
                  "Auth": {},
                  "PicFileId": "someStr",
                  "Nick": "someStr",
                  "Btw": "someStr",
                  "Buddies": [
                    -9007199254740991
                  ],
                  "BtwEmoji": "someStr",
                  "Offline": true
                },
                "ChangedFields": [
                  "someStr"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Internal type ident: `yo/util.None`",
            "headers": {
              "X-Yo-User": {
                "description": "0 if not authenticated, else current user's ID",
                "content": {
                  "text/plain": {
                    "example": "123"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "example": {}
              }
            }
          },
          "403": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "Unauthorized": "Unauthorized"
                }
              }
            }
          },
          "409": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "__userUpdate_NicknameAlreadyExists": "__userUpdate_NicknameAlreadyExists"
                }
              }
            }
          },
          "422": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "DbUpdExpectedIdGt0": "DbUpdExpectedIdGt0",
                  "DbUpdate_ExpectedChangesForUpdate": "DbUpdate_ExpectedChangesForUpdate",
                  "DbUpdate_ExpectedQueryForUpdate": "DbUpdate_ExpectedQueryForUpdate",
                  "__userUpdate_ExpectedNonEmptyNickname": "__userUpdate_ExpectedNonEmptyNickname"
                }
              }
            }
          },
          "500": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "MissingOrExcessiveContentLength": "MissingOrExcessiveContentLength"
                }
              }
            }
          },
          "504": {
            "description": "foo",
            "content": {
              "text/plain": {
                "examples": {
                  "TimedOut": "TimedOut"
                }
              }
            }
          }
        }
      }
    }
  }
}