// Code generated by `yo/srv/codegen_apistuff.go` DO NOT EDIT
package kaffe

import reflect "reflect"
import yosrv "yo/srv"
import util "yo/util"
import q "yo/db/query"

type _ = q.F // just in case of no other generated import users
type apiPkgInfo util.None

func (apiPkgInfo) PkgName() string    { return "kaffe" }
func (me apiPkgInfo) PkgPath() string { return reflect.TypeOf(me).PkgPath() }

var kaffePkg = apiPkgInfo{}

func api[TIn any, TOut any](f func(*yosrv.ApiCtx[TIn, TOut]), failIfs ...yosrv.Fails) yosrv.ApiMethod {
	return yosrv.Api[TIn, TOut](f, failIfs...).From(kaffePkg)
}

const Err__postDelete_InvalidPostId util.Err = "__postDelete_InvalidPostId"
const Err__postNew_ExpectedEmptyFilesFieldWithUploadedFilesInMultipartForm util.Err = "__postNew_ExpectedEmptyFilesFieldWithUploadedFilesInMultipartForm"
const Err__postNew_ExpectedNonEmptyPost util.Err = "__postNew_ExpectedNonEmptyPost"
const Err__postNew_ExpectedOnlyBuddyRecipients util.Err = "__postNew_ExpectedOnlyBuddyRecipients"
const ErrDbUpdate_ExpectedChangesForUpdate util.Err = "DbUpdate_ExpectedChangesForUpdate"
const ErrDbUpdate_ExpectedQueryForUpdate util.Err = "DbUpdate_ExpectedQueryForUpdate"
const Err__userBuddiesAdd_ExpectedEitherNickNameOrEmailAddr util.Err = "__userBuddiesAdd_ExpectedEitherNickNameOrEmailAddr"
const Err__userBy_ExpectedEitherNickNameOrEmailAddr util.Err = "__userBy_ExpectedEitherNickNameOrEmailAddr"
const Err___yo_authLoginOrFinalizePwdReset_AccountDoesNotExist util.Err = "___yo_authLoginOrFinalizePwdReset_AccountDoesNotExist"
const Err___yo_authLoginOrFinalizePwdReset_EmailInvalid util.Err = "___yo_authLoginOrFinalizePwdReset_EmailInvalid"
const Err___yo_authLoginOrFinalizePwdReset_EmailRequiredButMissing util.Err = "___yo_authLoginOrFinalizePwdReset_EmailRequiredButMissing"
const Err___yo_authLoginOrFinalizePwdReset_NewPasswordExpectedToDiffer util.Err = "___yo_authLoginOrFinalizePwdReset_NewPasswordExpectedToDiffer"
const Err___yo_authLoginOrFinalizePwdReset_NewPasswordInvalid util.Err = "___yo_authLoginOrFinalizePwdReset_NewPasswordInvalid"
const Err___yo_authLoginOrFinalizePwdReset_NewPasswordTooLong util.Err = "___yo_authLoginOrFinalizePwdReset_NewPasswordTooLong"
const Err___yo_authLoginOrFinalizePwdReset_NewPasswordTooShort util.Err = "___yo_authLoginOrFinalizePwdReset_NewPasswordTooShort"
const Err___yo_authLoginOrFinalizePwdReset_OkButFailedToCreateSignedToken util.Err = "___yo_authLoginOrFinalizePwdReset_OkButFailedToCreateSignedToken"
const Err___yo_authLoginOrFinalizePwdReset_PwdReqExpired util.Err = "___yo_authLoginOrFinalizePwdReset_PwdReqExpired"
const Err___yo_authLoginOrFinalizePwdReset_PwdResetRequired util.Err = "___yo_authLoginOrFinalizePwdReset_PwdResetRequired"
const Err___yo_authLoginOrFinalizePwdReset_WrongPassword util.Err = "___yo_authLoginOrFinalizePwdReset_WrongPassword"
const Err__userSignInOrReset_ExpectedPasswordAndNickOrEmailAddr util.Err = "__userSignInOrReset_ExpectedPasswordAndNickOrEmailAddr"
const Err__userSignInOrReset_WrongPassword util.Err = "__userSignInOrReset_WrongPassword"
const Err___yo_authRegister_EmailAddrAlreadyExists util.Err = "___yo_authRegister_EmailAddrAlreadyExists"
const Err___yo_authRegister_EmailInvalid util.Err = "___yo_authRegister_EmailInvalid"
const Err___yo_authRegister_EmailRequiredButMissing util.Err = "___yo_authRegister_EmailRequiredButMissing"
const Err___yo_authRegister_PasswordInvalid util.Err = "___yo_authRegister_PasswordInvalid"
const Err___yo_authRegister_PasswordTooLong util.Err = "___yo_authRegister_PasswordTooLong"
const Err___yo_authRegister_PasswordTooShort util.Err = "___yo_authRegister_PasswordTooShort"
const Err__userSignUpOrForgotPassword_EmailInvalid util.Err = "__userSignUpOrForgotPassword_EmailInvalid"
const Err__userSignUpOrForgotPassword_EmailRequiredButMissing util.Err = "__userSignUpOrForgotPassword_EmailRequiredButMissing"
const Err__userUpdate_ExpectedNonEmptyNickname util.Err = "__userUpdate_ExpectedNonEmptyNickname"
const Err__userUpdate_NicknameAlreadyExists util.Err = "__userUpdate_NicknameAlreadyExists"
const __postDeleteId = q.F("Id")
const __postMonthsUtcWithUserIds = q.F("WithUserIds")
const __postNewNewPost = q.F("NewPost")
const __postsDeletedOutOfPostIds = q.F("OutOfPostIds")
const __postsForMonthUtcOnlyBy = q.F("OnlyBy")
const __postsForMonthUtcPeriod = q.F("Period")
const __postsRecentOnlyBy = q.F("OnlyBy")
const __postsRecentSince = q.F("Since")
const __userBuddiesAddNickOrEmailAddr = q.F("NickOrEmailAddr")
const __userByEmailAddr = q.F("EmailAddr")
const __userByNickName = q.F("NickName")
const __userSignInOrResetNickOrEmailAddr = q.F("NickOrEmailAddr")
const __userSignInOrResetPassword2Plain = q.F("Password2Plain")
const __userSignInOrResetPasswordPlain = q.F("PasswordPlain")
const __userSignUpOrForgotPasswordNickOrEmailAddr = q.F("NickOrEmailAddr")
const __userUpdateChangedFields = q.F("ChangedFields")
const __userUpdateChanges = q.F("Changes")
const __userUpdateId = q.F("Id")
